#!/bin/sh
set -e

# if [ $EUID -ne 0 ]; then
#     echo "You must be root to do this." >&2
#     exit 2
# fi

DRIVE0="/Volumes/Errol HD"
DRIVE1="/Volumes/Errol HD2"
DRIVE2="/Volumes/Mickey-HD"
DRIVE3="/Volumes/Backups"

if [ -e "$DRIVE0" ]; then
    DRIVE="$DRIVE0"
elif [ -e "$DRIVE1" ]; then
    DRIVE="$DRIVE1"
elif [ -e "$DRIVE2" ]; then
    DRIVE="$DRIVE2"
elif [ -e "$DRIVE3" ]; then
    DRIVE="$DRIVE3"
else
    echo "Backup drive not connected." >&2
    exit 3
fi

TARGET="$DRIVE/Manual Backups/$(date -u +"%Y-%m-%d")"
mkdir -p "$TARGET"

# Dotfiles take a little special command to copy properly
find . -maxdepth 1 -iname '.*' -print0 | rsync -avz --progress --files-from=- --from0 ./ "$TARGET/dotfiles/" | sed -Ee 's/^/[dotfiles] /'

# Normal full dir backups
rsync -avz --progress ~/Projects/  "$TARGET/Projects/" --exclude node_modules | sed -Ee 's/^/[Projects] /'
rsync -avz --progress ~/bin/       "$TARGET/bin/"                             | sed -Ee 's/^/[bin] /'
rsync -avz --progress ~/Desktop/   "$TARGET/Desktop/"                         | sed -Ee 's/^/[Desktop] /'
rsync -avz --progress ~/Downloads/ "$TARGET/Downloads/"                       | sed -Ee 's/^/[Downloads] /'
rsync -avz --progress ~/Dropbox/   "$TARGET/Dropbox/"                         | sed -Ee 's/^/[Dropbox] /'
rsync -avz --progress ~/Library/   "$TARGET/Library/" --exclude Caches        | sed -Ee 's/^/[Library] /'
rsync -avz --progress ~/Movies/    "$TARGET/Movies/"                          | sed -Ee 's/^/[Movies] /'
rsync -avz --progress ~/Music/     "$TARGET/Music/"                           | sed -Ee 's/^/[Music] /'
rsync -avz --progress ~/Pictures/  "$TARGET/Pictures/"                        | sed -Ee 's/^/[Pictures] /'
